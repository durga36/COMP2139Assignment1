// <auto-generated />
using ASPAssignment1.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ASPAssignment1.Migrations
{
    [DbContext(typeof(ProductContext))]
    [Migration("20210207014630_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("ASPAssignment1.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Tournament Master"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "League Scheduler"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "League Scheduler Deluxe"
                        },
                        new
                        {
                            CategoryId = 4,
                            CategoryName = "Draft Manager"
                        },
                        new
                        {
                            CategoryId = 5,
                            CategoryName = "Team Manager"
                        });
                });

            modelBuilder.Entity("ASPAssignment1.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Price")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReleaseDate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 1,
                            Code = "TRNY10",
                            Name = "Tournament Master 1.0",
                            Price = "$4.99",
                            ReleaseDate = "12/1/2015"
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 2,
                            Code = "LEAG10",
                            Name = "League Scheduler 1.0",
                            Price = "$4.99",
                            ReleaseDate = "5/1/2016"
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 3,
                            Code = "LEAGD10",
                            Name = "League Scheduler Deluxe 1.0",
                            Price = "$7.99",
                            ReleaseDate = "8/1/2016"
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryId = 4,
                            Code = "DRAFT10",
                            Name = "Draft Manager 1.0",
                            Price = "$4.99",
                            ReleaseDate = "2/1/2017"
                        },
                        new
                        {
                            ProductId = 5,
                            CategoryId = 5,
                            Code = "TEAM10",
                            Name = "Team Manager 1.0",
                            Price = "$4.99",
                            ReleaseDate = "5/1/2017"
                        },
                        new
                        {
                            ProductId = 6,
                            CategoryId = 1,
                            Code = "TRNY20",
                            Name = "Tournament Master 2.0",
                            Price = "$5.99",
                            ReleaseDate = "2/15/2018"
                        },
                        new
                        {
                            ProductId = 7,
                            CategoryId = 4,
                            Code = "DRAFT20",
                            Name = "Draft Manager 2.0",
                            Price = "$5.99",
                            ReleaseDate = "7/15/2019"
                        });
                });

            modelBuilder.Entity("ASPAssignment1.Models.Product", b =>
                {
                    b.HasOne("ASPAssignment1.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
